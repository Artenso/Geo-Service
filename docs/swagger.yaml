basePath: /
definitions:
  model.RequestAuth:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  responder.Response:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: This service helps you to get full addres from its parts or coordinates
  title: Geo-Service
  version: "1.0"
paths:
  /api/address/geocode:
    post:
      consumes:
      - application/json
      description: Get full address info by coordinates
      parameters:
      - description: latitude
        in: query
        name: lat
        required: true
        type: string
      - description: longitude
        in: query
        name: lng
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responder.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responder.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/responder.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responder.Response'
      security:
      - ApiKeyAuth: []
      summary: GeoCode
      tags:
      - address
  /api/address/search:
    post:
      consumes:
      - application/json
      description: Get full address info by its part
      parameters:
      - description: part of address
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responder.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responder.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/responder.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responder.Response'
      security:
      - ApiKeyAuth: []
      summary: Adress Search
      tags:
      - address
  /api/login:
    post:
      consumes:
      - application/json
      description: returns JWT if you are registered user
      parameters:
      - description: registration data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.RequestAuth'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responder.Response'
      summary: Log in
      tags:
      - auth
  /api/register:
    post:
      consumes:
      - application/json
      description: Saves your username and password in db
      parameters:
      - description: registration data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.RequestAuth'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responder.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responder.Response'
      summary: Registration
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
